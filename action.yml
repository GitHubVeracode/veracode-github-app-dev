name: 'Organization workflow action'
description: 'Action to register organization workflow'
branding:
  icon: 'check-circle'
  color: 'white'
inputs:
  repositroy_owner: 
    description: 'repositroy_owner of original commit (provided by GitHub app via `github.event.client_payload.repository.owner`)'
    required: true
  repositroy_name: 
    description: 'repositroy_name of original commit (provided by GitHub app via `github.event.client_payload.repository.name`)'
    required: true
  check_run_name: 
    description: 'Name of check (Use `github.workflow` to use the name of the workflow)'
    required: true
  head_sha: 
    description: 'head_sha of original commit (provided by GitHub app via `github.event.client_payload.sha`)'
    required: true
  github_token: 
    description: 'github_token is a token (provided by GitHub app via `github.event.client_payload.token`)'
    required: true
  event_type:
    description: 'event_type triggered by the GitHub App (provided by GitHub app via `github.event.client_payload.event_type`)'
    required: true
  workflow_artifact_name:
    description: 'workflow_artifact_name will be artifact name with .json extension which is uploaded under the Action'
    required: true
  default_organization_repository:
    description: 'default_organization_repository will be workflow repo name where we will have all the workflow related config files'
    required: true
runs:
  using: "composite"
  steps: 
    # Create check run
    - name: GitHub API Request to create a check
      uses: octokit/request-action@v2.x
      id: create_check_run
      with:
        route: POST /repos/{owner}/{repo}/check-runs
        owner: ${{ inputs.repositroy_owner }}
        repo: ${{ inputs.repositroy_name }}
        name: ${{ inputs.check_run_name }}
        head_sha: ${{ inputs.head_sha }}
        status: in_progress
        details_url: "https://github.com/${{ inputs.repositroy_owner}}/${{ inputs.default_organization_repository }}/actions/runs/${{ fromJson(steps.create_check_run.outputs.data).id }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
    - name: Create metadata
      id: create-metadata-json
      run: |
        echo '{
          "check_run_type": "${{ inputs.event_type }}",
          "repository_name": "${{ inputs.repositroy_name }}",
          "check_run_id": ${{ fromJson(steps.create_check_run.outputs.data).id }}
        }' > workflow-metadata.json
      shell: bash
    - name: Save metadata
      uses: actions/upload-artifact@v3
      with:
        name: workflow-metadata
        path: workflow-metadata.json
